buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

group = config.group + config.mod_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_id + '-' + config.minecraft_version_out

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "../minecraft"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings =  config.mappings_version
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    ext.mod_version = "${config.mod_version}"

    if (mod_version.endsWith('-dev')) {
        mod_version = mod_version + "." + new Date().format('yyyyMMdd.HHmmss')
    }

    replaceIn "reference/Reference.java"
    replace "@MOD_VERSION@", mod_version

    if (project.hasProperty("signJarKeyStore")) {
        replace "@FINGERPRINT@", signJarFingerprint
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

version = project.minecraft.mod_version

processResources
{
    // Exclude the GIMP image files
    exclude '**/*.xcf'

    // Exclude the Cubik model files
    exclude '**/*.bdc3D'

    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.minecraft.mod_version
    inputs.property "minecraft_version", project.config.minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'mod_version': project.minecraft.mod_version, 'minecraft_version': project.config.minecraft_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // Move access transformers to META-INF
    //rename '(.+_at.cfg)', 'META-INF/$1'
}

if (project.hasProperty("signJarKeyStore")) {
    task signJar(type: SignJar, dependsOn: reobfJar) {
        inputFile = jar.archivePath
        outputFile = jar.archivePath

        keyStore = signJarKeyStore
        alias = signJarAlias
        storePass = signJarStorePass
        keyPass = signJarKeyPass
    }

    build.dependsOn signJar
}
